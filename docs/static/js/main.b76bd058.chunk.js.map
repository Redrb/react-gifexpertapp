{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","console","log","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","item","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACVC,mBAAS,WADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAe9C,OACE,sBAAMC,SATc,SAACC,GACrBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAKlB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,OACvBG,QAAQC,IAAIV,EAAEQ,OAAOF,a,+BCPZK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,gDACkCC,UAAUH,GAD5C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAU,IAAD,EAC9B,MAAO,CACLC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZV,IAAG,UAAEQ,EAAKG,cAAP,aAAE,EAAaC,iBAAiBZ,QARpB,kBAYZM,GAZY,4CAAH,sDCEL,SAASO,EAAT,GAAqC,IAAdH,EAAa,EAAbA,MAAOV,EAAM,EAANA,IACzC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,OCFT,IAAMO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAY,IAAD,EACVhB,mBAAS,CAC/BuB,KAAK,GACLa,SAAS,IAHuB,mBAC7BC,EAD6B,KACtBC,EADsB,KAwBpC,OAjBAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAM,SAACC,GAErBH,EACI,CACIf,KAAMkB,EACNL,SAAQ,SASrB,CAACpB,IAEGqB,EDrBsBK,CAAa1B,GAAhCa,EAF2B,EAEhCN,KAAaa,EAFmB,EAEnBA,QAEpB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAEhDoB,GAAS,mBAAGJ,UAAU,mCAAb,wBAGZ,qBAAKA,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACkB,GAAD,OACV,cAACZ,EAAD,eAA8BY,GAAZA,EAAIhB,aEUjBiB,EAvBM,WAAM,MAEW5C,mBAAS,CAAC,cAFrB,mBAElB6C,EAFkB,KAEN9C,EAFM,KASzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACG8C,EAAWpB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCbxB8B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b76bd058.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState(\"Inicial\");\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  const handletSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(inputValue.trim().length>2){\r\n        setCategories(cats => [inputValue,...cats]);\r\n        setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handletSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,    \r\n}\r\n","export const getGifs = async (category) => {\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=gZEl6ylhPXruCN6T9aU4a8LYwXbIgeAO`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map((item) => {\r\n      return {\r\n        id: item.id,\r\n        title: item.title,\r\n        url: item.images?.downsized_medium.url,\r\n      };\r\n    });\r\n\r\n    return gifs;\r\n  };","import React from 'react'\r\n\r\nexport default function GifGridItem({ title, url}) {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const {data:images, loading} = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n        {loading&&<p className=\"animate__animated animate__flash\">Loaging...</p>}\r\n\r\n\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category)=>{\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n    \r\n\r\n    useEffect(() => {\r\n        getGifs(category).then( (imgs)=> {\r\n\r\n            setState(\r\n                {\r\n                    data: imgs,\r\n                    loading:false\r\n                }\r\n            );\r\n            \r\n            \r\n\r\n\r\n\r\n        })\r\n    }, [category]); \r\n\r\n    return state; //{data:[], loading: true}\r\n}","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  // const categories = ['One punch', 'Samurai x', 'Dragon Ball']\r\n  const [categories, setCategories] = useState([\"One punch\"]);\r\n\r\n  // const handleAdd = ()=>{\r\n  //     setCategories(['HunterXHunter',...categories]);\r\n  //     // setCategories(cats => ['HunterXHunter',...cats]);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport GifExpertApp from \"./GifExpertApp\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n    <GifExpertApp /> , \n    document.getElementById(\"root\")\n);"],"sourceRoot":""}